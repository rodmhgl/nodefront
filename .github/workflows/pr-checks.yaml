name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]
    paths:
      - src/**
      - tests/**
      - requirements.txt
      - requirements-dev.txt
      - pyproject.toml
      - .flake8

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Lint with flake8
        run: |
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check code formatting with black
        run: |
          black --check --diff src/ tests/

      - name: Check import sorting with isort
        run: |
          isort --check-only --diff src/ tests/

      - name: Run tests with coverage
        run: |
          python -m pytest tests/ -v --cov=src --cov-report=xml --cov-report=term-missing

      - name: Security check with bandit
        run: |
          bandit -r src/ -ll

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.11'
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety pip-audit

      - name: Check for security vulnerabilities with safety
        run: |
          safety check --json || true

      - name: Audit dependencies with pip-audit
        run: |
          pip-audit --requirement requirements.txt --format=json || true
